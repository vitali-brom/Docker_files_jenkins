{"version":3,"sources":["i18n/index.ts","store/auth/index.ts","store/reducers.ts","store/index.ts","store/auth/selectors.ts","components/Header/LanguageSwitcher/index.tsx","components/Header/styled.tsx","components/Header/index.tsx","services/storage/index.ts","api/index.ts","api/mock.ts","api/auth/index.ts","api/auth/mock.ts","pages/Auth/Login/Form/validation.ts","pages/Auth/Login/Form/index.tsx","pages/Auth/Login/index.tsx","pages/Auth/Registration/index.tsx","pages/Auth/index.tsx","pages/Users/List/index.tsx","pages/Users/Details/index.tsx","pages/Users/index.tsx","pages/NotFound/index.tsx","router/RequireAuth/index.tsx","router/index.tsx","App.tsx","reportWebVitals.ts","index.tsx","theme/index.ts"],"names":["i18n","use","LanguageDetector","Backend","initReactI18next","init","react","useSuspense","lng","fallbackLng","debug","process","keySeparator","ns","defaultNS","interpolation","escapeValue","detection","caches","auth","createSlice","name","initialState","isAuthenticated","reducers","authenticate","state","rootReducer","combineReducers","reducer","store","configureStore","devTools","getIsAuthenticated","LanguageSwitcher","useTranslation","changeLanguage","onClick","Header","styled","header","theme","primary","Title","div","navigate","useNavigate","t","useSelector","to","TOKEN_KEY","http","axios","create","baseURL","interceptors","request","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","MockAdapter","delayResponse","onPost","reply","data","includes","user","email","firstName","lastName","login","post","schema","yup","required","password","Form","onSubmit","useForm","resolver","yupResolver","handleSubmit","register","errors","formState","message","type","Login","dispatch","useDispatch","useAsyncFn","values","a","setItem","slice","actions","console","Registration","Auth","index","element","path","List","Details","id","useParams","Users","NotFound","RequireAuth","children","location","useLocation","from","AppRouter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99939fd5.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\nconst isDevelopment = process.env.NODE_ENV === 'development';\n\ni18n\n  .use(LanguageDetector)\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    react: {\n      useSuspense: false,\n    },\n    lng: 'en',\n    fallbackLng: 'en',\n    debug: isDevelopment,\n    keySeparator: '.',\n    ns: ['common', 'login'],\n    defaultNS: 'common',\n    interpolation: {\n      escapeValue: false,\n    },\n    detection: {\n      caches: ['localStorage'],\n    },\n  });\n\nexport default i18n;\n","import { createSlice } from '@reduxjs/toolkit';\n\ntype InitialState = {\n  isAuthenticated: boolean;\n};\n\nconst initialState: InitialState = {\n  isAuthenticated: true,\n};\n\nconst auth = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    authenticate: state => {\n      state.isAuthenticated = true;\n    },\n  },\n});\n\nexport default auth;\n","import { combineReducers } from '@reduxjs/toolkit';\n\nimport auth from './auth';\n\nconst rootReducer = combineReducers({\n  auth: auth.reducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\n\nimport rootReducer from './reducers';\n\nconst store = configureStore({\n  reducer: rootReducer,\n  devTools: true,\n});\n\nexport type AppDispatch = typeof store.dispatch;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n\nexport default store;\n","import { RootState } from 'store/reducers';\n\nexport const getIsAuthenticated = (state: RootState): boolean => state.auth.isAuthenticated;\n","import { useTranslation } from 'react-i18next';\n\nconst LanguageSwitcher = (): JSX.Element => {\n  const { i18n } = useTranslation();\n\n  const changeLanguage = (lng: string) => i18n.changeLanguage(lng);\n\n  return (\n    <div>\n      <button onClick={() => changeLanguage('ru')}>RU</button>\n      <button onClick={() => changeLanguage('en')}>EN</button>\n    </div>\n  );\n};\n\nexport default LanguageSwitcher;\n","import styled from 'styled-components';\n\nexport const Header = styled.header`\n  display: flex;\n  justify-content: space-between;\n  padding: 10px;\n  background-color: ${({ theme }) => theme.primary};\n`;\n\nexport const Title = styled.div`\n  color: white;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { Link, useNavigate } from 'react-router-dom';\n\nimport { getIsAuthenticated } from 'store/auth/selectors';\n\nimport LanguageSwitcher from './LanguageSwitcher';\nimport * as S from './styled';\n\nconst Header = (): JSX.Element => {\n  const navigate = useNavigate();\n  const { t } = useTranslation('common');\n  const isAuthenticated = useSelector(getIsAuthenticated);\n\n  const logout = () => {\n    navigate('auth/login');\n  };\n\n  return (\n    <S.Header>\n      <S.Title>{t('title')}</S.Title>\n      <LanguageSwitcher />\n      {!isAuthenticated ? <Link to=\"/auth/login\">Log in</Link> : null}\n      {isAuthenticated ? <button onClick={logout}>Log out</button> : null}\n    </S.Header>\n  );\n};\n\nexport default Header;\n","const APP_PREFIX = 'starter-ts';\n\nconst TOKEN_KEY = `${APP_PREFIX}-token`;\n\nexport const setToken = (token: string): void => localStorage.setItem(TOKEN_KEY, token);\n\nexport const getToken = () => localStorage.getItem(TOKEN_KEY);\n","import axios, { AxiosError, AxiosRequestConfig } from 'axios';\n\nimport { getToken } from 'services/storage';\n\nconst baseURL = process.env.REACT_APP_BASE_API_URL;\n\nexport const http = axios.create({\n  baseURL,\n});\n\nconst onRequest = (config: AxiosRequestConfig): AxiosRequestConfig => {\n  const token = getToken();\n\n  if (token && config?.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n\n  return config;\n};\n\nconst onRequestError = (error: AxiosError): Promise<AxiosError> => Promise.reject(error);\n\nhttp.interceptors.request.use(onRequest, onRequestError);\n","import MockAdapter from 'axios-mock-adapter';\n\nimport { http } from './index';\n\nexport const mock = new MockAdapter(http, { delayResponse: 3000 });\n","import { AxiosResponse } from 'axios';\n\nimport { http } from '../index';\nimport { mock } from '../mock';\n\nimport { LoginRequest, LoginResponse } from './dto';\nimport { onLogin } from './mock';\n\nmock.onPost('/login').reply(onLogin);\n\nexport const login = (data: LoginRequest): Promise<AxiosResponse<LoginResponse>> => {\n  return http.post('/login', data);\n};\n","import { AxiosRequestConfig } from 'axios';\n\nimport { LoginResponse } from './dto';\n\nexport const onLogin = (config: AxiosRequestConfig): [number, string | LoginResponse] => {\n  if (config.data.includes('pass123')) {\n    return [401, 'Wrong credentials'];\n  }\n\n  return [\n    200,\n    {\n      user: {\n        email: 'test@test.com',\n        firstName: 'first',\n        lastName: 'last',\n      },\n      token: 'xxxxx.yyyyy.zzzzz',\n    },\n  ];\n};\n","import * as yup from 'yup';\n\nexport const schema = yup.object({\n  email: yup.string().required(),\n  password: yup.string().required(),\n});\n\nexport type FormData = yup.InferType<typeof schema>;\n","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\n\nimport { schema } from './validation';\n\nexport type FormData = {\n  email: string;\n  password: string;\n};\n\ntype Props = {\n  onSubmit: (values: FormData) => void;\n};\n\nconst Form = ({ onSubmit }: Props): JSX.Element => {\n  const { t } = useTranslation(['login']);\n  const {\n    handleSubmit,\n    register,\n    formState: { errors },\n  } = useForm<FormData>({ resolver: yupResolver(schema) });\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        <label>{t('login:email')}</label>\n        <input {...register('email')} />\n        <p>{errors.email?.message}</p>\n      </div>\n      <div>\n        <label>{t('login:password')}</label>\n        <input {...register('password')} />\n        <p>{errors.password?.message}</p>\n      </div>\n      <input type=\"submit\" />\n    </form>\n  );\n};\n\nexport default Form;\n","import { useAsyncFn } from 'react-use';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\n\nimport { setToken } from 'services/storage';\nimport { login } from 'api/auth';\nimport slice from 'store/auth';\n\nimport Form, { FormData } from './Form';\n\nconst Login = (): JSX.Element => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const [, authenticate] = useAsyncFn(async (values: FormData) => {\n    try {\n      const { data } = await login(values);\n\n      setToken(data.token);\n      dispatch(slice.actions.authenticate());\n      navigate('/');\n    } catch (error) {\n      console.error(error);\n    }\n  }, []);\n\n  return (\n    <div>\n      <Form onSubmit={authenticate} />\n    </div>\n  );\n};\n\nexport default Login;\n","const Registration = (): JSX.Element => {\n  return <div>Registration</div>;\n};\n\nexport default Registration;\n","import { Routes, Route, Navigate } from 'react-router-dom';\n\nimport Login from './Login';\nimport Registration from './Registration';\n\nconst Auth = (): JSX.Element => {\n  return (\n    <Routes>\n      <Route index element={<Navigate to=\"login\" />} />\n      <Route path=\"login\" element={<Login />} />\n      <Route path=\"registration\" element={<Registration />} />\n    </Routes>\n  );\n};\n\nexport default Auth;\n","const List = (): JSX.Element => {\n  return <div>List</div>;\n};\n\nexport default List;\n","import { useParams } from 'react-router-dom';\n\nconst Details = (): JSX.Element => {\n  const { id } = useParams<'id'>();\n  return <div>Details for user id: {`${id}`}</div>;\n};\n\nexport default Details;\n","import { Routes, Route } from 'react-router-dom';\n\nimport List from './List';\nimport Details from './Details';\n\nconst Users = (): JSX.Element => {\n  return (\n    <Routes>\n      <Route path=\"\" element={<List />} />\n      <Route path=\":id\" element={<Details />} />\n    </Routes>\n  );\n};\n\nexport default Users;\n","const NotFound = (): JSX.Element => <div>404 Not Found</div>;\n\nexport default NotFound;\n","import { Navigate, useLocation } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport { getIsAuthenticated } from 'store/auth/selectors';\n\ntype Props = {\n  children: JSX.Element;\n};\n\nconst RequireAuth = ({ children }: Props): JSX.Element => {\n  const isAuthenticated = useSelector(getIsAuthenticated);\n  const location = useLocation();\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/auth/login\" state={{ from: location }} />;\n  }\n\n  return children;\n};\n\nexport default RequireAuth;\n","import { Routes, Route, Outlet } from 'react-router-dom';\n\nimport Header from 'components/Header';\n\nimport Auth from 'pages/Auth';\nimport Users from 'pages/Users';\nimport NotFound from 'pages/NotFound';\n\nimport RequireAuth from './RequireAuth';\n\nconst AppRouter = (): JSX.Element => {\n  return (\n    <Routes>\n      <Route\n        path=\"/\"\n        element={\n          <div>\n            <Header />\n            <Outlet />\n          </div>\n        }\n      >\n        <Route\n          path=\"users/*\"\n          element={\n            <RequireAuth>\n              <Users />\n            </RequireAuth>\n          }\n        />\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n\n      <Route path=\"auth/*\" element={<Auth />} />\n    </Routes>\n  );\n};\n\nexport default AppRouter;\n","import AppRouter from 'router';\n\nconst App = (): JSX.Element => {\n  return (\n    <div>\n      <AppRouter />\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\n\nimport 'i18n';\nimport store from 'store';\nimport { theme } from 'theme';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </ThemeProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const theme = {\n  primary: '#005faf',\n};\n"],"sourceRoot":""}